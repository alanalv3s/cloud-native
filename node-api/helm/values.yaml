# values.yaml
replicaCount: 2

image:
  repository: alanalv3s/node-api
  pullPolicy: Always
  tag: "1.0.0"

nameOverride: node-api
fullnameOverride: node-api

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  #name: "{{ .Values.nameOverride }}-role"

envFrom: #load all env-vars from shared Values/env-vars.conf file
  enabled: true

podLabels:
  app: "cloud-native"

podAnnotations:
  config.linkerd.io/proxy-cpu-request: 50m

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  runAsUser: 1000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  annotations: {}
  ingressClassName: nginx
  hosts:
    - host: node-api.localhost
      paths:
        - /

resources:
  limits:
    cpu: "100m"
    memory: "64Mi"
  requests:
    cpu: "100m"
    memory: "64Mi"

readinessProbe:
  httpGet:
    path: /health
    port: 3000
  failureThreshold: 3
  initialDelaySeconds: 15
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 5

livenessProbe:
  httpGet:
    path: /health
    port: 3000
  failureThreshold: 3
  initialDelaySeconds: 20
  # Allow sufficient amount of time (90 seconds = periodSeconds * failureThreshold)
  # for the lightship registered shutdown handlers to run to completion.
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 5

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 10
      policies:
        - type: Pods
          value: 1
          periodSeconds: 5

podDisruptionBudget:
  maxUnavailable: 50%

nodeSelector: {}

tolerations: []

affinity: {}

volumeMounts: []

volumes: []
# topologySpreadConstraints:
#   - maxSkew: 1
#     topologyKey: topology.kubernetes.io/zone
#     whenUnsatisfiable: ScheduleAnyway
#     labelSelector:
#       matchLabels:
#         default-chart.kubernetes.io/name: "{{ .Values.nameOverride }}"
